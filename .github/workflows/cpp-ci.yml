name: "C++ CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    name: "Code Quality (${{ matrix.backend }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [epoll, select]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: "Add LLVM repository"
        run: |
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          sudo add-apt-repository -y "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-18 main"

      - name: "Install dependencies"
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cmake ninja-build clang-18 clang-tidy-18 clang-format-18
          version: 1.0

      - name: "Configure CMake"
        run: |
          cmake -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DBACKEND=${{ matrix.backend }}

      - name: "Run code quality checks"
        run: ./scripts/code-quality.sh

  build-and-test:
    name: "Build & Test (${{ matrix.backend }})"
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        backend: [epoll, select]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: "Add LLVM repository"
        run: |
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          sudo add-apt-repository -y "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-18 main"

      - name: "Install dependencies"
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cmake ninja-build clang-18
          version: 1.0

      - name: "Configure CMake"
        run: |
          cmake -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_COMPILER=clang++-18 \
            -DBACKEND=${{ matrix.backend }}

      - name: "Build"
        run: cmake --build build --parallel

      - name: "Run tests"
        run: |
          cd build
          ctest --output-on-failure --parallel
